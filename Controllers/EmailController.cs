using MailKit.Net.Smtp;
using MailKit.Security;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using MimeKit;
using MimeKit.Text;

namespace Project_C.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class EmailController : ControllerBase
    {
        [HttpPost]
        public IActionResult SendEmail(string body)
        {
            // var user = new Customer();

            var email = new MimeMessage();

            // email and password are credentials generated by ethereal.email
            var emailAddress = "ashton.luettgen@ethereal.email";
            var password = "yUvE7jdqyFua6tHG8p";
            
            email.From.Add(MailboxAddress.Parse(emailAddress));
            email.To.Add(MailboxAddress.Parse(emailAddress));
            email.Subject = "Test";
            var multipart = new Multipart("mixed");
            // create an image attachment for the file located at path
            // var attachment = new MimePart("image", "gif")
            // {
            //     Content = new MimeContent(File.OpenRead(path), ContentEncoding.Default),
            //     ContentDisposition = new ContentDisposition(ContentDisposition.Attachment),
            //     ContentTransferEncoding = ContentEncoding.Base64,
            //     FileName = Path.GetFileName(path)
            // };

            // now create the multipart/mixed container to hold the message text and the
            // image attachment
            // var multipart = new Multipart("mixed");
            // multipart.Add(body);
            // multipart.Add(attachment);

            using (StreamReader SourceReader = System.IO.File.OpenText("Files/MailTemplate.html"))
            {
                // builder.HtmlBody = SourceReader.ReadToEnd();
                multipart.Add(new TextPart(TextFormat.Html) { Text = SourceReader.ReadToEnd() });
            }
            email.Body = multipart;

            using var smtp = new SmtpClient();
            smtp.Connect("smtp.ethereal.email", 587, SecureSocketOptions.StartTls);
            smtp.Authenticate(emailAddress, password); // email and password
            smtp.Send(email);
            smtp.Disconnect(true);

            return Ok();
        }
    }
}